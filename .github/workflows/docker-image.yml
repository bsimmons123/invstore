name: Docker Image CI

on:
  push:
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: 'Create env file'
      run: |
        touch .env
        echo DATABASE_URL="<db-String>" >> .env
        echo SECRET_KEY=secret_key >> .env
        cat .env
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_REPO }}:$(date +%s)

  docker:
    name: Publish - Docker Hub
    runs-on: ubuntu-latest
    needs: [ build ]
    env:
      REPO: ${{ secrets.DOCKER_REPO }}
    if: github.event_name == 'workflow_dispatch'
    steps:
      - uses: actions/checkout@v3
      - name: Login to Docker Hub
        run: docker login -u ${{ secrets.DOCKER_USER }}
          -p '${{ secrets.DOCKER_PASS }}'
      - name: 'Create env file'
        run: |
          touch .env
          echo DATABASE_URL="<db-String>" >> .env
          echo SECRET_KEY=secret_key >> .env
          cat .env
      - name: Build Prod Docker image
        if: github.ref == 'refs/heads/master'
        run: |
          echo "REPO - $REPO"
          echo "GITHUB_SHA (first 8 characters) - ${GITHUB_SHA::8}"
          docker build -t $REPO:latest -t $REPO:${GITHUB_SHA::8} .
      - name: Build Docker Image
        if: github.ref != 'refs/heads/master'
        run: |
          echo "REPO - $REPO"
          echo "GITHUB_SHA (first 8 characters) - ${GITHUB_SHA::8}"
          docker build -t $REPO:${GITHUB_SHA::8} .
      - name: Publish Docker image
        run: docker push $REPO --all-tags

  remote-deploy:
    runs-on: ubuntu-latest
    needs: [ docker ]
    if: github.event_name == 'workflow_dispatch' && github.ref == 'refs/heads/master'
    steps:
      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          name: id_rsa # optional
          known_hosts: ${{ secrets.SSH_HOST }}
          # config: ${{ secrets.CONFIG }} # ssh_config; optional
          if_key_exists: fail # replace / ignore / fail; optional (defaults to fail)
      - name: rsync over SSH
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_ADDRESS }} ""cd ../invstore && ./redeploy.sh""